const path = require('path');

const PROTOBUF_EXTENSIONS = ['.py', '.java', '.h', '.cc', '.cpp', '.m', '.rb', '.php'];
const HAXE_EXTENSIONS = ['.js', '.py', '.lua', '.cpp', '.h', '.java', '.cs', '.php'];
const APACHE_THRIFT_EXTENSIONS = ['.rb', '.py', '.go', '.js', '.m', '.java', '.h', '.cc', '.cpp', '.php'];
class Generated {
  constructor(name, data) {
    this.name = name;
    this.extname = path.extname(name);
    this.lines = (data === null) ? [] : data.toString().split('\n');
    this._data = data;
  }

  isXcodeFile() {
    return ['.nib', '.xcworkspacedata', '.xcuserstate'].includes(this.extname);
  }

  isIntellijFile() {
    return /(?:^|\/)\.idea\//.test(this.name);
  }

  isCocoapods() {
    return /(^Pods|\/Pods)\//.test(this.name);
  }

  isCarthageBuild() {
    return /(^|\/)Carthage\/Build\//.test(this.name);
  }

  isMaybeMinified() {
    return ['.js', '.css'].includes(this.extname.toLowerCase());
  }

  isMinifiedFiles() {
    if (this.isMaybeMinified() && this.lines.length > 0) {
      let chars = 0;
      this.lines.forEach((line) => {
        chars += line.length;
      });
      return Math.round(chars / this.lines.length) > 110;
    }
    return false;
  }

  hasSourceMap() {
    if (!this.isMaybeMinified()) {
      return false;
    }
    return this.lines.slice(-2).some((line) => /^\/[*\/][\#@] source(?:Mapping)?URL|sourceURL=/.test(line));
  }

  isSourceMap() {
    if (this.extname.toLowerCase() !== '.map') {
      return false;
    }

    return /(\.css|\.js)\.map$/i.test(this.name) // Name convention
      || /^{"version":\d+,/.test(this.lines[0]) // Revision 2 and later begin with the version number
      || /^\/\*\* Begin line maps\. \*\*\/{/.test(this.lines[0]); // Revision 1 begins with a magic comment
  }

  isCompiledCoffeescript() {
    if (this.extname !== '.js') {
      return false;
    }

    // CoffeeScript generated by > 1.2 include a comment on the first line
    if (/^\/\/ Generated by /.test(this.lines[0])) {
      return true;
    }

    if (this.lines[0] === '(function() {' && this.lines[-2] === '}).call(this);' && this.lines[-1] === '') {
      let score = 0;
      this.lines.forEach((line) => {
        if (/var /.test(line)) {
          score += 1 * (line.match(/(_fn|_i|_len|_ref|_results)/g) || []).length;
          score += 3 * (line.match(/(__bind|__extends|__hasProp|__indexOf|__slice)/g) || []).count;
        }
      });
      return score >= 3;
    }

    return false;
  }

  isGeneratedNetDocfile() {
    if (this.extname.toLowerCase() !== '.xml') {
      return false;
    }
    if (this.lines.length <= 3) {
      return false;
    }
    return (this.lines[1].includes('<doc>')
      && this.lines[2].includes('<assembly>')
      && this.lines[this.lines.length - 2].includes('</doc>')
    );
  }

  isGeneratedNetDesignerFile() {
    return /\.designer\.(cs|vb)$/i.test(this.name);
  }

  isGeneratedNetSpecflowFeatureFile() {
    return /\.feature\.cs$/i.test(this.name);
  }

  isGeneratedParser() {
    if (this.extname !== '.js') {
      return false;
    }

    if (/^(?:[^\/]|\/[^\*])*\/\*(?:[^\*]|\*[^\/])*Generated by PEG.js/.test(this.lines.slice(0, 4).join(''))) {
      return true;
    }
    return false;
  }

  isGeneratedPostscript() {
    if (!['.ps', '.eps', '.pfa'].includes(this.extname)) {
      return false;
    }

    if (/(\n|\r\n|\r)\s*(?:currentfile eexec\s+|\/sfnts\s+\[\1<)[0-9A-Fa-f]{8,}\1/.test(this._data)) {
      return true;
    }

    let creator;
    for (let i = 0; i < 10; i += 1) {
      const line = this.lines[i];
      if (/^%%Creator: /.test(line)) {
        [creator] = line.match(/^%%Creator: /);
        break;
      }
    }

    if (!creator) {
      return false;
    }

    if (/[0-9]|draw|mpage|ImageMagick|inkscape|MATLAB/.test(creator)
      || /PCBNEW|pnmtops|\(Unknown\)|Serif Affinity|Filterimage -tops/.test(creator)) {
      return true;
    }

    if (creator.includes('EAGLE')) {
      for (let i = 0; i < 5; i += 1) {
        if (this.lines[i].match(/^%%Title: EAGLE Drawing /)) {
          return true;
        }
      }
    }

    return false;
  }

  isGeneratedGo() {
    if (this.extname !== '.go') {
      return false;
    }
    if (this.lines.length <= 1) {
      return false;
    }
    return this.lines.slice(0, 40).some((line) => /^\/\/ Code generated (?:[\uD800-\uDBFF][\uDC00-\uDFFF]|[^\n\uD800-\uDFFF])*/.test(line));
  }

  isGeneratedProtocolBufferFromGo() {
    if (this.extname !== '.proto') {
      return false;
    }
    if (this.lines.length < 1) {
      return false;
    }
    return this.lines.slice(0, 20).some((line) => line.includes('This file was autogenerated by go-to-protobuf'));
  }

  isGeneratedProtocolBuffer() {
    if (!PROTOBUF_EXTENSIONS.includes(this.extname)) {
      return false;
    }
    if (this.lines.length <= 1) {
      return false;
    }
    return this.lines.slice(0, 3).some((line) => line.includes('Generated by the protocol buffer compiler.  DO NOT EDIT!'));
  }

  isGeneratedJavascriptProtocolBuffer() {
    if (this.extname !== '.js') {
      return false;
    }
    if (this.lines.length <= 6) {
      return false;
    }
    return this.lines[5].includes('GENERATED CODE -- DO NOT EDIT!');
  }

  isGeneratedApacheThrift() {
    if (!APACHE_THRIFT_EXTENSIONS.includes(this.extname)) {
      return false;
    }

    return this.lines.slice(0, 6).some((line) => line.includes('Autogenerated by Thrift Compiler'));
  }

  isGeneratedJniHeader() {
    if (this.extname !== '.h') {
      return false;
    }
    if (this.lines.length <= 2) {
      return false;
    }
    return (this.lines[0].includes('/* DO NOT EDIT THIS FILE - it is machine generated */')
      && this.lines[1].includes('#include <jni.h>'));
  }

  isNodeModules() {
    return /node_modules\//.test(this.name);
  }

  isGoVendor() {
    return /vendor\/((?!-)[-0-9A-Za-z]+(?<!-)\.)+(com|edu|gov|in|me|net|org|fm|io)/.test(this.name);
  }

  isGoLock() {
    return /(Gopkg|glide)\.lock/.test(this.name) || /go\.sum/.test(this.name);
  }

  isPoetryLock() {
    return /poetry\.lock/.test(this.name);
  }

  isUVLock() {
    return /uv\.lock/.test(this.name);
  }

  isEsyLock() {
    return /(^|\/)(\w+\.)?esy.lock$/.test(this.name);
  }

  isNpmShrinkwrapOrPackageLock() {
    return (/npm-shrinkwrap\.json/.test(this.name) || /package-lock\.json/.test(this.name));
  }

  isYarnLock() {
    return this.name === 'yarn.lock';
  }

  isGeneratedYarnPlugNPlay() {
    return /(^|\/)\.pnp\..*$/.test(this.name);
  }

  isGodeps() {
    return /Godeps\//.test(this.name);
  }

  isComposerLock() {
    return /composer\.lock/.test(this.name);
  }

  isGeneratedByZephir() {
    return /.\.zep\.(?:c|h|php)$/.test(this.name);
  }

  isCargoLock() {
    return /Cargo\.lock/.test(this.name);
  }

  isVcrCassette() {
    if (this.extname !== '.yml') {
      return false;
    }
    if (this.lines.length <= 2) {
      return false;
    }
    return this.lines[this.lines.length - 2].includes('recorded_with: VCR');
  }

  isGeneratedAntlr() {
    if (this.extname !== '.g') {
      return false;
    }
    if (this.lines.length <= 2) {
      return false;
    }
    return this.lines[1].includes('generated by Xtest');
  }

  isCompiledCythonFile() {
    if (!['.c', '.cpp'].includes(this.extname)) {
      return false;
    }
    if (this.lines.length <= 1) {
      return false;
    }
    return this.lines[0].includes('Generated by Cython');
  }

  isPipenvLock() {
    return /Pipfile\.lock/.test(this.name);
  }

  isTerraformLock() {
    return /(?:^|\/)\.terraform\.lock\.hcl$/.test(this.name);
  }

  isGeneratedModule() {
    if (this.extname !== '.mod') {
      return false;
    }
    if (this.lines.length <= 1) {
      return false;
    }
    return (this.lines[0].includes('PCBNEW-LibModule-V')
      || this.lines[0].includes("GFORTRAN module version '"));
  }

  isGeneratedUnity3dMeta() {
    if (this.extname !== '.meta') {
      return false;
    }
    if (this.lines.length <= 1) {
      return false;
    }
    return this.lines[0].includes('fileFormatVersion: ');
  }

  isGeneratedRacc() {
    if (this.extname !== '.rb') {
      return false;
    }
    if (this.lines.length <= 2) {
      return false;
    }
    return this.lines[2].startsWith('# This file is automatically generated by Racc');
  }

  isGeneratedJflex() {
    if (this.extname !== '.java') {
      return false;
    }
    if (this.lines.length <= 1) {
      return false;
    }
    return this.lines[0].startsWith('/* The following code was generated by JFlex ');
  }

  isGeneratedGrammarkit() {
    if (this.extname !== '.java') {
      return false;
    }
    if (this.lines.length <= 1) {
      return false;
    }
    return this.lines[0].startsWith('// This is a generated file. Not intended for manual editing.');
  }

  isGeneratedRoxygen2() {
    if (this.extname !== '.Rd') {
      return false;
    }
    if (this.lines.length <= 1) {
      return false;
    }
    return this.lines[0].includes('% Generated by roxygen2: do not edit by hand');
  }

  isGeneratedJison() {
    if (this.extname !== '.js') {
      return false;
    }
    if (this.lines.length <= 1) {
      return false;
    }
    return (this.lines[0].startsWith('/* parser generated by jison ')
      || this.lines[0].startsWith('/* generated by jison-lex '));
  }

  isGeneratedGrpcCpp() {
    if (!['.cpp', '.hpp', '.h', '.cc'].includes(this.extname)) {
      return false;
    }
    if (this.lines.length <= 1) {
      return false;
    }
    return this.lines[0].startsWith('// Generated by the gRPC');
  }

  isGeneratedDart() {
    if (this.extname !== '.dart') {
      return false;
    }
    if (this.lines.length <= 1) {
      return false;
    }
    return /generated code\W{2,3}do not modify/.test(this.lines[0].toLowerCase());
  }

  isGeneratedPerlPpportHeader() {
    if (!/ppport\.h$/.test(this.name)) {
      return false;
    }
    if (this.lines.length <= 10) {
      return false;
    }
    return this.lines[8].includes('Automatically created by Devel::PPPort');
  }

  isGeneratedGraphqlRelay() {
    return /__generated__\//.test(this.name);
  }

  isGeneratedGamemakerStudio() {
    if (!['.yy', '.yyp'].includes(this.extname)) {
      return false;
    }

    if (this.lines.length <= 3) {
      return false;
    }
    return /\"modelName\"\:\s*\"GM/.test(this.lines[2])
      || /^\d\.\d\.\d.+\|\{/.test(this.lines[0]);
  }

  isGeneratedGimp() {
    if (!['.c', '.h'].includes(this.extname)) {
      return false;
    }
    if (this.lines.length === 0) {
      return false;
    }
    return /\/\* GIMP [a-zA-Z0-9\- ]+ C\-Source image dump \(.+?\.c\) \*\//.test(this.lines[0])
      || /\/\*  GIMP header image file format \([a-zA-Z0-9\- ]+\)\: .+?\.h  \*\//.test(this.lines[0]);
  }

  isGeneratedVisualStudio6() {
    if (this.extname !== '.dsp') {
      return false;
    }
    return this.lines.slice(0, 3).some((line) => line.includes('# Microsoft Developer Studio Generated Build File'));
  }

  isGeneratedHaxe() {
    if (!HAXE_EXTENSIONS.includes(this.extname)) {
      return false;
    }
    return this.lines.slice(0, 3).some((line) => line.includes('Generated by Haxe'));
  }

  isGeneratedHTML() {
    if (!['.html', '.htm', '.xhtml'].includes(this.extname.toLowerCase())) {
      return false;
    }
    if (this.lines.length <= 1) {
      return false;
    }

    // Pkgdown
    if (this.lines.slice(0, 2).some((line) => /<!-- Generated by pkgdown: do not edit by hand -->/.test(line))) return true;

    // Mandoc
    if (this.lines.length > 2) {
      if (this.lines[2].startsWith('<!-- This is an automatically generated file.')) {
        return true;
      }
    }

    // Doxygen
    return this.lines.slice(0, 30).some((line) => /<!--\s+Generated by Doxygen\s+[.0-9]+\s*-->/i.test(line));
  }

  isGeneratedJooq() {
    if (this.extname.toLowerCase() !== '.java') {
      return false;
    }
    return this.lines.slice(0, 2).some((line) => line.includes('This file is generated by jOOQ'));
  }

  isGeneratedPascalTlb() {
    return /_tlb\.pas$/i.test(this.name);
  }

  isGenerated() {
    return (this.isXcodeFile()
      || this.isIntellijFile()
      || this.isCocoapods()
      || this.isCarthageBuild()
      || this.isGeneratedGraphqlRelay()
      || this.isGeneratedNetDesignerFile()
      || this.isGeneratedNetSpecflowFeatureFile()
      || this.isComposerLock()
      || this.isCargoLock()
      || this.isNodeModules()
      || this.isGoVendor()
      || this.isGoLock()
      || this.isUVLock()
      || this.isPoetryLock()
      || this.isEsyLock()
      || this.isNpmShrinkwrapOrPackageLock()
      || this.isTerraformLock()
      || this.isYarnLock()
      || this.isGeneratedYarnPlugNPlay()
      || this.isGodeps()
      || this.isGeneratedByZephir()
      || this.isMinifiedFiles()
      || this.hasSourceMap()
      || this.isSourceMap()
      || this.isCompiledCoffeescript()
      || this.isGeneratedParser()
      || this.isGeneratedNetDocfile()
      || this.isGeneratedPostscript()
      || this.isCompiledCythonFile()
      || this.isPipenvLock()
      || this.isGeneratedGo()
      || this.isGeneratedProtocolBufferFromGo()
      || this.isGeneratedProtocolBuffer()
      || this.isGeneratedJavascriptProtocolBuffer()
      || this.isGeneratedApacheThrift()
      || this.isGeneratedJniHeader()
      || this.isVcrCassette()
      || this.isGeneratedAntlr()
      || this.isGeneratedModule()
      || this.isGeneratedUnity3dMeta()
      || this.isGeneratedRacc()
      || this.isGeneratedJflex()
      || this.isGeneratedGrammarkit()
      || this.isGeneratedRoxygen2()
      || this.isGeneratedHTML()
      || this.isGeneratedJison()
      || this.isGeneratedGrpcCpp()
      || this.isGeneratedDart()
      || this.isGeneratedPerlPpportHeader()
      || this.isGeneratedGamemakerStudio()
      || this.isGeneratedGimp()
      || this.isGeneratedVisualStudio6()
      || this.isGeneratedHaxe()
      || this.isGeneratedJooq()
      || this.isGeneratedPascalTlb()
    );
  }
}

module.exports = Generated;
